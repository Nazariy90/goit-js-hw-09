{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,WAAUC,IAEpBG,EAAO,C,SAAEJ,E,WAAUC,GAAa,GAEjCA,EAAW,G,CAICQ,SAASC,cAAc,SAE/BC,iBAAiB,UAAUC,IACpCA,EAAMC,iBAEN,MAAMC,EAAaC,OAAOH,EAAMI,OAAOC,SAASC,MAAMC,OAChDC,EAAYL,OAAOH,EAAMI,OAAOC,SAASI,KAAKF,OAC9CG,EAAcP,OAAOH,EAAMI,OAAOC,SAASM,OAAOJ,OAExD,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAaE,IAAK,CAGrCzB,EAFiByB,EACIV,EAAaM,GAAaI,EAAI,IAEhDC,MAAK,EAACzB,SAAEA,EAAQC,WAAEA,MACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqB5B,QAAiBC,MAAe,IAGxD4B,OAAM,EAAC7B,SAAEA,EAAQC,WAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoB9B,QAAeC,MAAe,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, firstDelay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, firstDelay });\n      } else {\n        reject({ position, firstDelay });\n      }\n    }, firstDelay);\n  });\n}\n\nconst submitForm = document.querySelector('.form');\n\nsubmitForm.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const firstDelay = Number(event.target.elements.delay.value);\n  const delayStep = Number(event.target.elements.step.value);\n  const amountField = Number(event.target.elements.amount.value);\n\n  for (let i = 1; i <= amountField; i++) {\n    const position = i;\n    const promiseDelay = firstDelay + delayStep * (i - 1);\n    createPromise(position, promiseDelay)\n      .then(({ position, firstDelay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${firstDelay}ms`\n        );\n      })\n      .catch(({ position, firstDelay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${firstDelay}ms`\n        );\n      });\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","firstDelay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","firstDelay1","Number","target","elements","delay","value","delayStep","step","amountField","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.73a7bea3.js.map"}